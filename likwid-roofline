#!/usr/bin/env python3

import sys
from subprocess import check_output, DEVNULL
import shlex


def run_likwid_kernel(kernel, size):
    cmd = shlex.split(f"likwid-bench -t {kernel} -w S0:{size}")
    try:
        return check_output(cmd, stderr=DEVNULL).decode(sys.stderr.encoding)
    except Exception as e:
        return None


def parse_gflops(output):
    for line in output.split("\n"):
        if line.startswith("MFlops"):
            line = line.split()
            mflops = float(line[-1])
    gflops = 1E-3 * mflops
    return gflops


def parse_gbs(output):
    for line in output.split("\n"):
        if line.startswith("MByte"):
            line = line.split()
            mbytes = float(line[-1])
    gbytes = 1E-3 * mbytes
    return gbytes


def find_max_flops():
    pass




if __name__ == "__main__":
    
    #print()
    o =  run_likwid_kernel("triad_mem_avx512_fma", "100KB")
    print(parse_gflops(o))
    print(parse_gbs(o))

